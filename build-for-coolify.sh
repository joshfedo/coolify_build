#!/bin/bash

# Coolify Module Combiner Script
# Downloads modular docker-compose files and combines them into a single file
# This runs during Coolify's build phase, before docker-compose processes the file

set -e

echo "🔧 Coolify Build: Combining modular docker-compose files..."

BASE_URL="https://raw.githubusercontent.com/joshfedo/coolify_build/main/services"
TEMP_DIR="/tmp/coolify-modules"
OUTPUT_FILE="docker-compose.yml"

# Create temp directory
mkdir -p "$TEMP_DIR"

# Download modular files
echo "📦 Downloading service modules..."
curl -s "$BASE_URL/database.yml" -o "$TEMP_DIR/database.yml"
curl -s "$BASE_URL/cache.yml" -o "$TEMP_DIR/cache.yml" 
curl -s "$BASE_URL/search.yml" -o "$TEMP_DIR/search.yml"
curl -s "$BASE_URL/application.yml" -o "$TEMP_DIR/application.yml"
curl -s "$BASE_URL/backup.yml" -o "$TEMP_DIR/backup.yml"
curl -s "$BASE_URL/networks.yml" -o "$TEMP_DIR/networks.yml"
curl -s "$BASE_URL/volumes.yml" -o "$TEMP_DIR/volumes.yml"

# Start building the combined file
echo "🔨 Combining services into $OUTPUT_FILE..."

cat > "$OUTPUT_FILE" << 'EOF'
version: '3.8'

# Generated by Coolify Module Combiner
# DO NOT EDIT - This file is automatically generated from modular components

services:
EOF

# Extract and combine services from each module
for file in "$TEMP_DIR"/*.yml; do
    if [ -f "$file" ]; then
        echo "  Processing $(basename "$file")..."
        # Extract services section and append (skip version and top-level keys)
        yq eval '.services // {}' "$file" | sed 's/^/  /' >> "$OUTPUT_FILE"
    fi
done

# Add networks
echo "" >> "$OUTPUT_FILE"
echo "networks:" >> "$OUTPUT_FILE"
yq eval '.networks // {}' "$TEMP_DIR/networks.yml" | sed 's/^/  /' >> "$OUTPUT_FILE"

# Add volumes  
echo "" >> "$OUTPUT_FILE"
echo "volumes:" >> "$OUTPUT_FILE"
yq eval '.volumes // {}' "$TEMP_DIR/volumes.yml" | sed 's/^/  /' >> "$OUTPUT_FILE"

# Cleanup
rm -rf "$TEMP_DIR"

echo "✅ Successfully generated $OUTPUT_FILE with all services"
echo "📊 Service count: $(yq eval '.services | keys | length' "$OUTPUT_FILE")"

# Validate the generated file
if command -v docker-compose &> /dev/null; then
    echo "🔍 Validating generated compose file..."
    if docker-compose -f "$OUTPUT_FILE" config > /dev/null 2>&1; then
        echo "✅ Generated compose file is valid"
    else
        echo "❌ Generated compose file has errors:"
        docker-compose -f "$OUTPUT_FILE" config
        exit 1
    fi
fi

echo "🚀 Ready for Coolify deployment!"
